import streamlit as st
from oracle_engine import OracleEngine
import pandas as pd # ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö DataFrame

st.set_page_config(page_title="üîÆ Oracle Baccarat AI", layout="centered")

# CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
st.markdown("""
    <style>
    .title-center {
        text-align: center;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }
    </style>
""", unsafe_allow_html=True)
st.markdown('<div class="title-center">üîÆ Oracle Baccarat AI</div>', unsafe_allow_html=True)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô session state ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
if "history" not in st.session_state:
    st.session_state.history = []
if "money_balance" not in st.session_state:
    st.session_state.money_balance = 1000 # ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
if "bet_amount" not in st.session_state:
    st.session_state.bet_amount = 100 # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏ï‡∏≤
if "bet_log" not in st.session_state:
    st.session_state.bet_log = [] # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô (pred, actual, win/loss, amount, balance, outcome)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï history ‡∏Ç‡∏≠‡∏á engine
def add_to_history(result):
    st.session_state.history.append(result)

def remove_last_from_history():
    if st.session_state.history:
        st.session_state.history.pop()
        # ‡∏ñ‡πâ‡∏≤‡∏•‡∏ö history ‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠ bet_log ‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        # ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏•‡∏≠‡∏à‡∏¥‡∏Å‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô
        
def reset_all_history():
    st.session_state.history = []
    st.session_state.money_balance = 1000 # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢
    st.session_state.bet_log = []
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á OracleEngine ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï memory_failed_patterns
    st.session_state.oracle_engine = OracleEngine()

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏á‡∏¥‡∏ô
def record_bet_result(predicted_side, actual_result):
    bet_amt = st.session_state.bet_amount
    win_loss = 0
    outcome = "Miss"

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô
    # ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà '?') ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î Avoid
    if predicted_side != '?' and predicted_side != '-':
        if predicted_side == actual_result:
            outcome = "Hit"
            if predicted_side == 'P':
                win_loss = bet_amt
            elif predicted_side == 'B':
                win_loss = bet_amt * 0.95 # ‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏´‡∏±‡∏Å 5%
            elif predicted_side == 'T': # ‡∏ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ T ‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å
                win_loss = bet_amt * 8 # ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏à‡πà‡∏≤‡∏¢ Tie
            st.session_state.money_balance += win_loss
        else: # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏¥‡∏î
            win_loss = -bet_amt
            st.session_state.money_balance -= bet_amt
    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô '?' ‡∏´‡∏£‡∏∑‡∏≠ '-'' ‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏• ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á
    # ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏´‡∏±‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô

    st.session_state.bet_log.append({
        "Predict": predicted_side,
        "Actual": actual_result,
        "Win/Loss": f"{win_loss:+.2f}", # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + ‡∏´‡∏£‡∏∑‡∏≠ -
        "Balance": f"{st.session_state.money_balance:.2f}",
        "Outcome": outcome
    })
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï history ‡∏Ç‡∏≠‡∏á engine ‡∏î‡πâ‡∏ß‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á
    st.session_state.history.append(actual_result)

    # ‡πÅ‡∏à‡πâ‡∏á engine ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ (‡πÄ‡∏û‡∏∑‡πà‡∏≠ Memory Logic)
    # ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ OracleEngine ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Memory Logic ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô predict_next ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á
    # ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏ò‡∏≠‡∏î update_memory_logic(predicted, actual)
    # ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ, memory logic ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô predict_next ‡∏à‡∏≤‡∏Å history ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

# ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÇ‡∏´‡∏•‡∏î engine ‡∏à‡∏≤‡∏Å session state
if "oracle_engine" not in st.session_state:
    st.session_state.oracle_engine = OracleEngine()
engine = st.session_state.oracle_engine
engine.history = st.session_state.history.copy() # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï history ‡πÉ‡∏ô engine

# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô
st.markdown("---")
st.markdown(f"### üí∞ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: **{st.session_state.money_balance:.2f} ‡∏ö‡∏≤‡∏ó**")
st.session_state.bet_amount = st.number_input("üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏ï‡∏≤:", min_value=1, value=st.session_state.bet_amount, step=10)

# ‡πÄ‡∏ä‡πá‡∏Ñ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ 20 ‡∏ï‡∏≤
if len(engine.history) < 20:
    st.warning(f"‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 20 ‡∏ï‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥\n(‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ {len(engine.history)} ‡∏ï‡∏≤)")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö 20 ‡∏ï‡∏≤
prediction_data = None
if len(engine.history) >= 20:
    prediction_data = engine.predict_next() # predict_next ‡∏Ñ‡∏ß‡∏£‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô dict ‡πÅ‡∏•‡πâ‡∏ß
    next_pred_side = prediction_data['prediction']
    conf = engine.confidence_score() # Confidence ‡∏¢‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°

    emoji_map = {'P': 'üîµ Player', 'B': 'üî¥ Banker', 'T': 'üü¢ Tie', '?': '‚Äî (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)'}

    st.markdown(f"### üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ï‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ: **{emoji_map.get(next_pred_side, '?')}** (Confidence: {conf}%)")
    st.markdown(f"**üìç ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á:** {prediction_data['risk']}")
    st.markdown(f"**üßæ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** **{prediction_data['recommendation']}**")
    st.markdown(f"**üß¨ Developer View:** {prediction_data['developer_view']}")
else:
    st.markdown("### üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ï‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ: ‚Äî (‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 20 ‡∏ï‡∏≤)")

# ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô)
st.markdown("---")
st.markdown("### üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤:")

if prediction_data and prediction_data['recommendation'] == "Play ‚úÖ":
    st.info(f"‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ **{emoji_map.get(prediction_data['prediction'], '')}** ‡πÉ‡∏ô‡∏ï‡∏≤‡∏ô‡∏µ‡πâ. ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏à‡∏ö‡∏£‡∏≠‡∏ö")
    col_play_p, col_play_b, col_play_t = st.columns(3)
    with col_play_p:
        if st.button(f"‡∏ú‡∏•‡∏≠‡∏≠‡∏Å üîµ (P)", key="result_P_play", use_container_width=True):
            record_bet_result(prediction_data['prediction'], 'P')
            st.rerun()
    with col_play_b:
        if st.button(f"‡∏ú‡∏•‡∏≠‡∏≠‡∏Å üî¥ (B)", key="result_B_play", use_container_width=True):
            record_bet_result(prediction_data['prediction'], 'B')
            st.rerun()
    with col_play_t:
        if st.button(f"‡∏ú‡∏•‡∏≠‡∏≠‡∏Å üü¢ (T)", key="result_T_play", use_container_width=True):
            record_bet_result(prediction_data['prediction'], 'T')
            st.rerun()
elif prediction_data and prediction_data['recommendation'] == "Avoid ‚ùå":
    st.warning("‚ö†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ **‡∏á‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô** ‡πÉ‡∏ô‡∏ï‡∏≤‡∏ô‡∏µ‡πâ. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
    col_avoid_p, col_avoid_b, col_avoid_t = st.columns(3)
    with col_avoid_p:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üîµ (P)", key="no_bet_P", use_container_width=True):
            add_to_history('P') # ‡πÅ‡∏Ñ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï history ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô
            st.rerun()
    with col_avoid_b:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üî¥ (B)", key="no_bet_B", use_container_width=True):
            add_to_history('B')
            st.rerun()
    with col_avoid_t:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üü¢ (T)", key="no_bet_T", use_container_width=True):
            add_to_history('T')
            st.rerun()
else: # ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡πÄ‡∏ä‡πà‡∏ô ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö)
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 20 ‡∏ï‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå")
    col_init_p, col_init_b, col_init_t = st.columns(3)
    with col_init_p:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üîµ (P)", key="init_P", use_container_width=True):
            add_to_history('P') # ‡πÅ‡∏Ñ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï history ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô
            st.rerun()
    with col_init_b:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üî¥ (B)", key="init_B", use_container_width=True):
            add_to_history('B')
            st.rerun()
    with col_init_t:
        if st.button(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏≠‡∏≠‡∏Å üü¢ (T)", key="init_T", use_container_width=True):
            add_to_history('T')
            st.rerun()


# ‡πÅ‡∏™‡∏î‡∏á Bet Log
st.markdown("### üìä ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô")
if st.session_state.bet_log:
    df_log = pd.DataFrame(st.session_state.bet_log)
    st.dataframe(df_log, use_container_width=True)
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ")

# ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô emoji
st.markdown("---")
st.markdown("### üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ú‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏∞‡∏ö‡∏ö)")
history_emojis = engine.get_history_emojis()
if history_emojis:
    # ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏•‡∏∞ 10 ‡∏ï‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
    display_history = []
    for i in range(0, len(history_emojis), 10):
        display_history.append(" ".join(history_emojis[i:i+10]))
    st.markdown("\n".join(display_history))
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

# ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á)
col_hist1, col_hist2 = st.columns(2)
with col_hist1:
    if st.button("‚Ü©Ô∏è ‡∏•‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", key="delLastHist", use_container_width=True, on_click=remove_last_from_history):
        st.rerun() # Rerun ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
with col_hist2:
    if st.button("üßπ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", key="resetAllHist", use_container_width=True, on_click=reset_all_history):
        st.rerun() # Rerun ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ


st.markdown("---")
st.caption("‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Oracle Baccarat AI ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏∏‡∏ì")

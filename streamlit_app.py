import streamlit as st
import json
import os
from oracle_core import OracleBrain, Outcome # Assuming oracle_core.py contains OracleBrain and Outcome

# --- Persistence Setup ---
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å/‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
DATA_FILE = "oracle_data.json"

def save_state():
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á OracleBrain ‡πÅ‡∏•‡∏∞ Streamlit session ‡∏•‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå JSON"""
    state = {
        'history': st.session_state.oracle.history,
        'ties': st.session_state.oracle.ties,
        'result_log': st.session_state.oracle.result_log,
        # ‡πÅ‡∏õ‡∏•‡∏á None ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á "None" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ JSON ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ serialize ‡πÑ‡∏î‡πâ
        'prediction_log': [p if p is not None else "None" for p in st.session_state.oracle.prediction_log], 
        'last_prediction': st.session_state.oracle.last_prediction,
        'show_initial_wait_message': st.session_state.oracle.show_initial_wait_message,
        'tie_buffer': st.session_state.tie_buffer,
        'prediction': st.session_state.prediction,
        'source': st.session_state.source,
        'confidence': st.session_state.confidence,
        'pattern_name': st.session_state.pattern_name,
        'trend_indicator': st.session_state.get('trend_indicator', None), # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å trend_indicator ‡∏î‡πâ‡∏ß‡∏¢
        'last_p_b_outcome': st.session_state.get('last_p_b_outcome', None), # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå P/B ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á Tie
        'miss_streak': st.session_state.get('miss_streak', 0) # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å miss_streak ‡∏î‡πâ‡∏ß‡∏¢
    }
    with open(DATA_FILE, 'w', encoding='utf-8') as f:
        json.dump(state, f, ensure_ascii=False, indent=4)

def load_state():
    """‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà OracleBrain ‡πÅ‡∏•‡∏∞ Streamlit session"""
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r', encoding='utf-8') as f:
            state = json.load(f)
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á OracleBrain ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ attribute
            st.session_state.oracle = OracleBrain() 
            st.session_state.oracle.history = state.get('history', [])
            st.session_state.oracle.ties = state.get('ties', [])
            st.session_state.oracle.result_log = state.get('result_log', [])
            # ‡πÅ‡∏õ‡∏•‡∏á "None" ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô None
            st.session_state.oracle.prediction_log = [p if p != "None" else None for p in state.get('prediction_log', [])] 
            st.session_state.oracle.last_prediction = state.get('last_prediction', None)
            st.session_state.oracle.show_initial_wait_message = state.get('show_initial_wait_message', True)
            
            # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Streamlit session state
            st.session_state.tie_buffer = state.get('tie_buffer', 0)
            st.session_state.prediction = state.get('prediction', None)
            st.session_state.source = state.get('source', None)
            st.session_state.confidence = state.get('confidence', None)
            st.session_state.pattern_name = state.get('pattern_name', None)
            st.session_state.trend_indicator = state.get('trend_indicator', None)
            st.session_state.last_p_b_outcome = state.get('last_p_b_outcome', None) # ‡πÇ‡∏´‡∏•‡∏î last_p_b_outcome
            st.session_state.miss_streak = state.get('miss_streak', 0) # ‡πÇ‡∏´‡∏•‡∏î miss_streak
        return True
    return False

# --- Setup ---
st.set_page_config(page_title="üîÆ Oracle 5.0", layout="centered")

# Custom CSS for styling and animations
st.markdown("""
<style>
/* Font and general body styles */
html, body, [class*="css"] {
    font-family: 'Sarabun', sans-serif !important;
    background-color: #1a1a1a; /* Dark background for the whole app */
    color: #ecf0f1; /* Light text color */
}
/* Main title */
.big-title {
    font-size: 28px; /* Increased font size */
    text-align: center;
    font-weight: bold;
    margin-bottom: 5px; /* Reduced margin */
    color: #f39c12; /* Orange color for title */
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5); /* Stronger shadow */
    display: flex;
    justify-content: center;
    align-items: baseline; /* Align text at baseline */
}
.big-title .version {
    font-size: 16px; /* Smaller font for version */
    margin-left: 5px; /* Space between "ORACLE" and "5.0" */
    color: #ecf0f1; /* Lighter color for version */
}

/* Prediction box */
.predict-box {
    padding: 15px; /* More padding */
    background-color: #2c3e50; /* Darker blue-grey */
    border-radius: 15px; /* More rounded corners */
    color: white;
    font-size: 20px; /* Larger font */
    margin-bottom: 20px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* Stronger shadow */
    text-align: center; /* Center text */
    animation: fadeIn 0.8s ease-out; /* Fade-in animation */
    border: 2px solid #f39c12; /* Orange border */
    max-width: 400px; /* Limit width */
    margin-left: auto;
    margin-right: auto;
}
.predict-box b {
    color: #ecf0f1; /* Lighter text for bold parts */
    font-size: 28px; /* Larger font for prediction text */
}
.predict-box .st-emotion-cache-1r6slb0 { /* Target Streamlit's caption */
    font-size: 14px;
    color: #bdc3c7; /* Lighter grey for captions */
    margin-top: 5px;
}
.predict-box .tie-info {
    font-size: 20px; /* Larger font for tie info */
    font-weight: bold;
    color: #2ecc71; /* Green for tie count */
}

/* Big Road container */
.big-road-container {
    width: 100%;
    overflow-x: auto; /* Horizontal scrolling */
    padding: 10px;
    background: #000; /* Black background for Big Road */
    border-radius: 10px;
    white-space: nowrap;
    margin-bottom: 20px;
    box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.5); /* Deeper inset shadow */
    border: 2px solid #333; /* Darker border */
    max-height: 250px; /* Limit height for scroll, allows more rows if columns are short */
    display: flex; /* Use flexbox for columns */
    align-items: flex-start; /* Align columns to the top */
}
/* Big Road column */
.big-road-column {
    display: inline-flex; /* Use inline-flex to make columns flexible */
    flex-direction: column; /* Stack cells vertically */
    vertical-align: top;
    margin-right: 4px; /* Space between columns */
    padding-left: 0px; /* No left padding */
    flex-shrink: 0; /* Prevent columns from shrinking */
}
/* Big Road cell */
.big-road-cell {
    width: 28px; /* Smaller cells */
    height: 28px;
    text-align: center;
    line-height: 28px;
    font-size: 18px; /* Smaller icons */
    margin-bottom: 2px; /* Space between cells */
    border-radius: 50%; /* Circular shape */
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2); /* Shadow for depth */
    position: relative; /* For tie overlay */
    background-color: transparent; /* Default transparent background */
}
/* Specific colors for P and B cells */
.big-road-cell.player {
    background-color: #3498db; /* Blue for Player */
}
.big-road-cell.banker {
    background-color: #e74c3c; /* Red for Banker */
}

/* Tie overlay style */
.tie-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the tie number */
    font-size: 14px; /* Smaller font for tie number */
    color: black; /* Black text for tie number */
    background-color: #2ecc71; /* Green background for tie number */
    border-radius: 50%;
    width: 20px; /* Size of the tie circle */
    height: 20px;
    line-height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    border: 1px solid #1a1a1a; /* Dark border for tie circle */
    z-index: 10; /* Ensure it's on top */
}

/* Buttons */
.stButton>button {
    width: 100%;
    border-radius: 10px; /* More rounded */
    padding: 12px 0; /* More padding */
    font-size: 18px; /* Larger font */
    font-weight: bold;
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); /* Stronger shadow */
}
.stButton>button:hover {
    transform: translateY(-3px); /* More pronounced lift */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
}
/* Button colors */
.stButton>button[data-testid="stButton-btn_p"] { background-color: #3498db; } /* Blue */
.stButton>button[data-testid="stButton-btn_p"]:hover { background-color: #2980b9; }

.stButton>button[data-testid="stButton-btn_b"] { background-color: #e74c3c; } /* Red */
.stButton>button[data-testid="stButton-btn_b"]:hover { background-color: #c0392b; }

.stButton>button[data-testid="stButton-btn_t"] { background-color: #2ecc71; } /* Emerald Green */
.stButton>button[data-testid="stButton-btn_t"]:hover { background-color: #27ae60; }

.stButton>button:nth-child(1)[data-testid^="stButton-"] { background-color: #f1c40f; } /* Yellow for Undo */
.stButton>button:nth-child(1)[data-testid^="stButton-"]:hover { background-color: #f39c12; }

.stButton>button:nth-child(2)[data-testid^="stButton-"] { background-color: #95a5a6; } /* Grey for Reset */
.stButton>button:nth-child(2)[data-testid^="stButton-"]:hover { background-color: #7f8c8d; }

/* Trend Indicator Box */
.trend-box {
    padding: 12px;
    background-color: #333; /* Darker background */
    border-radius: 10px;
    margin-top: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    text-align: center;
    border: 2px solid #f39c12; /* Orange border */
    color: #ecf0f1;
    max-width: 400px; /* Limit width */
    margin-left: auto;
    margin-right: auto;
}
.trend-box h4 {
    color: #f39c12; /* Orange for trend title */
    margin-bottom: 5px;
}
.trend-box p {
    font-size: 18px; /* Larger font for trend text */
    color: #ecf0f1;
    font-weight: bold;
}

/* Miss Streak Box */
.miss-streak-box {
    padding: 10px;
    background-color: #c0392b; /* Red background */
    border-radius: 10px;
    margin-top: 15px;
    margin-bottom: 15px;
    text-align: center;
    font-weight: bold;
    color: white;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    max-width: 400px; /* Limit width */
    margin-left: auto;
    margin-right: auto;
}

/* Fade-in animation for prediction box */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}
</style>
""", unsafe_allow_html=True)

# --- Session Init ---
# ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡πà‡∏≠‡∏ô
if not load_state():
    # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô OracleBrain ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ session ‡πÉ‡∏´‡∏°‡πà
    st.session_state.oracle = OracleBrain()
    st.session_state.prediction = None
    st.session_state.source = None
    st.session_state.confidence = None
    st.session_state.pattern_name = None
    st.session_state.tie_buffer = 0
    st.session_state.trend_indicator = None # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô trend_indicator
    st.session_state.last_p_b_outcome = None # ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå P/B ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Tie
    st.session_state.miss_streak = 0 # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô miss_streak

# --- Functions ---
def handle_click(outcome: Outcome):
    """
    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° P, B, T
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏á‡πÉ‡∏ô OracleBrain, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢, ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    """
    if outcome == "T":
        st.session_state.tie_buffer += 1
        # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î T, ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ Big Road ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        # ‡πÅ‡∏•‡∏∞ Prediction Box ‡πÅ‡∏™‡∏î‡∏á Tie buffer
        # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å predict_next() ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Tie ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà OracleBrain ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    else:
        # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô P ‡∏´‡∏£‡∏∑‡∏≠ B, ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Tie ‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏ß‡πâ
        st.session_state.oracle.add_result(outcome, st.session_state.tie_buffer)
        st.session_state.tie_buffer = 0 # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï tie_buffer ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏° P/B
        st.session_state.last_p_b_outcome = outcome # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå P/B ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

        # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• P/B ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 20 ‡∏°‡∏∑‡∏≠)
        prediction, source, confidence, pattern_code = st.session_state.oracle.predict_next()
        st.session_state.prediction = prediction
        st.session_state.source = source
        st.session_state.confidence = confidence
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Miss Streak ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ P/B
        st.session_state.miss_streak = st.session_state.oracle.calculate_miss_streak()
    
    # ‡∏î‡∏∂‡∏á‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ (‡∏ó‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô P/B/T)
    st.session_state.trend_indicator = st.session_state.oracle.get_simplified_trend()

    # ‡πÅ‡∏°‡∏õ‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ó‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô P/B/T)
    pattern_names = {
        "PBPB": "‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á",
        "BPBP": "‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á",
        "PPBB": "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏¥‡∏î",
        "BBPP": "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏¥‡∏î",
        "PPPP": "‡∏°‡∏±‡∏á‡∏Å‡∏£ P",
        "BBBB": "‡∏°‡∏±‡∏á‡∏Å‡∏£ B"
    }
    # ‡πÉ‡∏ä‡πâ pattern_code ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    st.session_state.pattern_name = pattern_names.get(pattern_code, pattern_code if pattern_code else None)
    
    save_state() # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á

def handle_remove():
    """
    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö"
    ‡∏•‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢, ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    """
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Tie ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô P/B ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if st.session_state.tie_buffer > 0:
        st.session_state.tie_buffer -= 1 # ‡∏•‡∏î Tie buffer
    elif st.session_state.oracle.history:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Tie buffer ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ P/B ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å
        st.session_state.oracle.remove_last()
        st.session_state.tie_buffer = 0 # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï tie buffer ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö P/B
        
        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï last_p_b_outcome ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        if st.session_state.oracle.history:
            st.session_state.last_p_b_outcome = st.session_state.oracle.history[-1]
            # ‡∏î‡∏∂‡∏á tie_count ‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
            if st.session_state.oracle.ties:
                st.session_state.tie_buffer = st.session_state.oracle.ties[-1] 
                # ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö P/B, Tie ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô buffer
                # ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Tie ‡πÑ‡∏î‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏°‡∏∑‡∏≠ P/B ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                # ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö Tie ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å ties list ‡∏Ç‡∏≠‡∏á OracleBrain ‡∏î‡πâ‡∏ß‡∏¢
                st.session_state.oracle.ties[-1] = 0 # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Tie ‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÉ‡∏ô ties list
        else:
            st.session_state.last_p_b_outcome = None
    else:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ P/B ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ Tie buffer ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
        st.session_state.tie_buffer = 0
        st.session_state.last_p_b_outcome = None


    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö
    prediction, source, confidence, pattern_code = st.session_state.oracle.predict_next()
    st.session_state.prediction = prediction
    st.session_state.source = source
    st.session_state.confidence = confidence
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Miss Streak ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ P/B
    st.session_state.miss_streak = st.session_state.oracle.calculate_miss_streak()

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÉ‡∏´‡∏°‡πà
    st.session_state.trend_indicator = st.session_state.oracle.get_simplified_trend()

    # ‡πÅ‡∏°‡∏õ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
    pattern_names = {
        "PBPB": "‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á", "BPBP": "‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á",
        "PPBB": "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏¥‡∏î", "BBPP": "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏¥‡∏î",
        "PPPP": "‡∏°‡∏±‡∏á‡∏Å‡∏£ P", "BBBB": "‡∏°‡∏±‡∏á‡∏Å‡∏£ B"
    }
    st.session_state.pattern_name = pattern_names.get(pattern_code, pattern_code if pattern_code else None)

    save_state() # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á

def handle_reset():
    """
    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏•‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà"
    ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï OracleBrain ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ session ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    """
    st.session_state.oracle.reset()
    st.session_state.prediction = None
    st.session_state.source = None
    st.session_state.confidence = None
    st.session_state.pattern_name = None
    st.session_state.tie_buffer = 0
    st.session_state.trend_indicator = None # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï trend indicator ‡∏î‡πâ‡∏ß‡∏¢
    st.session_state.last_p_b_outcome = None # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï last_p_b_outcome
    st.session_state.miss_streak = 0 # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï miss_streak
    save_state() # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á

# --- Header ---
st.markdown('<div class="big-title">üîÆ ORACLE <span class="version">5.0</span></div>', unsafe_allow_html=True)

# --- Prediction Box ---
st.markdown("<div class='predict-box'>", unsafe_allow_html=True)
if st.session_state.tie_buffer > 0 and st.session_state.last_p_b_outcome:
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Tie ‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î T ‡πÅ‡∏•‡∏∞‡∏°‡∏µ P/B ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    emoji = {"P": "üîµ", "B": "üî¥"}.get(st.session_state.last_p_b_outcome, "‚ùì")
    st.markdown(f"<b>üìç ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</b> {emoji} {st.session_state.last_p_b_outcome} <span class='tie-info'>+ {st.session_state.tie_buffer} Tie</span>", unsafe_allow_html=True)
    st.caption("‡∏Å‡∏î P ‡∏´‡∏£‡∏∑‡∏≠ B ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏°‡∏∑‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ")
elif st.session_state.prediction:
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥
    emoji = {"P": "üîµ", "B": "üî¥"}.get(st.session_state.prediction, "‚ùì")
    st.markdown(f"<b>üìç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢:</b> {emoji} {st.session_state.prediction}", unsafe_allow_html=True)
    if st.session_state.source:
        st.caption(f"üß† ‡πÇ‡∏°‡∏î‡∏π‡∏•: {st.session_state.source}")
    if st.session_state.pattern_name:
        st.caption(f"üìä ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà: {st.session_state.pattern_name}")
    if st.session_state.confidence is not None:
        st.caption(f"üîé ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {st.session_state.confidence}%")
else:
    # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    st.warning("‚ö†Ô∏è ‡∏£‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ (‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 20 ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏™‡∏°‡∏≠)")
    # ‡πÅ‡∏™‡∏î‡∏á Tie ‡∏™‡∏∞‡∏™‡∏°‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ P/B
    if st.session_state.tie_buffer > 0:
        st.info(f"‚ö™ Tie ‡∏™‡∏∞‡∏™‡∏°: {st.session_state.tie_buffer} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
st.markdown("</div>", unsafe_allow_html=True)

# --- Miss Streak Display ---
if st.session_state.miss_streak > 0:
    st.markdown(f"<div class='miss-streak-box'>üî• ‡πÅ‡∏û‡πâ‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô: {st.session_state.miss_streak} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</div>", unsafe_allow_html=True)

# --- Big Road Display ---
st.markdown("### üïí Big Road")
# ‡πÉ‡∏ä‡πâ static method ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Big Road
big_road_display_cols = OracleBrain._generate_big_road_columns_for_display(
    st.session_state.oracle.history, st.session_state.oracle.ties
)

if big_road_display_cols:
    html = "<div class='big-road-container'>"
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 16 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    cols_to_display = big_road_display_cols[-16:] 
    
    for col_data in cols_to_display:
        html += "<div class='big-road-column'>"
        for outcome, tie_count in col_data:
            # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°
            cell_class = "player" if outcome == "P" else "banker"
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Tie Overlay (‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏î‡∏≥)
            tie_html = ""
            if tie_count > 0:
                tie_html = f"<div class='tie-overlay'>{tie_count}</div>"
            
            # ‡∏ß‡∏á‡∏Å‡∏•‡∏° P ‡∏´‡∏£‡∏∑‡∏≠ B
            html += f"<div class='big-road-cell {cell_class}'>{tie_html}</div>"
        html += "</div>"
    html += "</div>"
    st.markdown(html, unsafe_allow_html=True)
else:
    st.info("üåÄ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

# --- Trend Indicator ---
st.markdown("### üìä ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
st.markdown("<div class='trend-box'>", unsafe_allow_html=True)
if st.session_state.trend_indicator:
    st.markdown(f"<p>{st.session_state.trend_indicator}</p>", unsafe_allow_html=True)
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô Big Road)")
st.markdown("</div>", unsafe_allow_html=True)

# --- Buttons ---
col1, col2, col3 = st.columns(3)
with col1:
    st.button("üîµ P", on_click=handle_click, args=("P",), key="btn_p")
with col2:
    st.button("üî¥ B", on_click=handle_click, args=("B",), key="btn_b")
with col3:
    st.button("‚ö™ T", on_click=handle_click, args=("T",), key="btn_t")

col4, col5 = st.columns(2)
with col4:
    st.button("‚Ü©Ô∏è ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", on_click=handle_remove)
with col5:
    st.button("üßπ ‡∏•‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà", on_click=handle_reset)

# --- Accuracy ---
st.markdown("### üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏π‡∏•")
modules_accuracy = st.session_state.oracle.get_module_accuracy()
# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if any(modules_accuracy.values()) or len(st.session_state.oracle.history) >= 4: 
    for name, acc in modules_accuracy.items():
        st.write(f"‚úÖ {name}: {acc:.1f}%")
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 4 ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏™‡∏°‡∏≠)")

